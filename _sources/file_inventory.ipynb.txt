{
    "cells": [
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": [
                "# file/Folder Snapshot\n",
                "\n",
                "A quick tool to generate file list without other installations."
            ]
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": [
                "To start the app from `Python` environment: "
            ]
        },
        {
            "cell_type": "markdown",
            "metadata": {
                "vscode": {
                    "languageId": "plaintext"
                }
            },
            "source": [
                "```python\n",
                "import mtbp3cd\n",
                "mtbp3cd.runapp(\"FileInventory\")\n",
                "```"
            ]
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": [
                "## Overall\n",
                "\n",
                "This app includes a set of buttons on the left hand side for **navigating** through major steps.\n",
                "Within each function set, additional buttons arranged horizontally for **executing** functions.\n",
                "\n",
                "Navigating buttons include:\n",
                "\n",
                "- `Select output folder`: this page sets output folder path for storing log files from folder snapshot. These log files provides information about the folder structure, time, file size, file type, etc. If the first item is left blank, a existing folder will be selected, and a warning message will be shown if the existing folder is not empty. \n",
                "- `Select input folder`: this page sets input folder, which could be a data package folder. The `save` buttons keep information about the input folder in log files and save these files in the output folder. NOTE that these two `save` buttons will OVERWRITE log files without sending warning or ask for confirmation.\n",
                "- `Checksum`: this page can generate a checksum file for all files within the input folder, or select a checksum file and compare that with checksums of files in the input folder. Three options are provided.\n",
                "- `Comparing records`: this page compare folder logs including size, dates, path, files, folder structure, etc. This page can function with or without an input folder selected: \n",
                "    - if an input folder is not selected, the function will try to find log files in the output folder, and compare logs in the output folder and logs in the record folder selected in this page.\n",
                "    - if an input folder is selected, the function will try to create log information, and compare logs of the input folder and logs in the record folder selected in this page "
            ]
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": [
                "To start, select an output folder:\n",
                "\n",
                "![demo1](_static/img/demo1.jpg)"
            ]
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": [
                "To select the folder that includes data files:\n",
                "\n",
                "![demo2](_static/img/demo2.jpg)"
            ]
        }
    ],
    "metadata": {
        "kernelspec": {
            "display_name": "Python 3",
            "language": "python",
            "name": "python3"
        },
        "language_info": {
            "codemirror_mode": {
                "name": "ipython",
                "version": 3
            },
            "file_extension": ".py",
            "mimetype": "text/x-python",
            "name": "python",
            "nbconvert_exporter": "python",
            "pygments_lexer": "ipython3",
            "version": "3.10.13"
        }
    },
    "nbformat": 4,
    "nbformat_minor": 4
}
