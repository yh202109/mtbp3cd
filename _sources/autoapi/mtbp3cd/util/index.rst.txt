mtbp3cd.util
============

.. py:module:: mtbp3cd.util


Submodules
----------

.. toctree::
   :maxdepth: 1

   /autoapi/mtbp3cd/util/lsr/index


Attributes
----------

.. autoapisummary::

   mtbp3cd.util._ROOT


Classes
-------

.. autoapisummary::

   mtbp3cd.util.LsrTree


Functions
---------

.. autoapisummary::

   mtbp3cd.util.get_data


Package Contents
----------------

.. py:class:: LsrTree(path='', outfmt='list', with_counts=False, count_str='', with_file_label=False, label_str='')

   .. py:attribute:: path
      :value: ''



   .. py:attribute:: outfmt
      :value: 'list'



   .. py:attribute:: with_counts
      :value: False



   .. py:attribute:: count_str
      :value: ''



   .. py:method:: list_files()

      List files in the specified directory based on the output format.

      :returns: The list of files, JSON string, or DataFrame based on the output format.
      :rtype: list or str or pd.DataFrame

      .. rubric:: Examples

      >>> lsr = LsrTree("/path/to/directory", outfmt="list")
      >>> lsr.list_files()
      ['file1.txt', 'file2.txt', 'file3.txt']



   .. py:method:: list_files_json()

      List files in the specified directory and return the result as a JSON string.

      :returns: The JSON string representing the file list.
      :rtype: str



   .. py:method:: list_files_list()

      List files in the specified directory and return the result as a list.

      :returns: The list of files.
      :rtype: list



   .. py:method:: list_files_dataframe()

      List files in the specified directory and return the result as a pandas DataFrame.

      :returns: The DataFrame representing the file list.
      :rtype: pd.DataFrame



   .. py:method:: list_files_string()

      List files in the specified directory using the default output format.

      :returns: The file list as a string.
      :rtype: str



   .. py:method:: list_files_tree()

      List files in the specified directory and return the result as a tree structure.

      :returns: The tree structure representing the file list.
      :rtype: str



.. py:data:: _ROOT
   :value: b'.'


.. py:function:: get_data(path)

